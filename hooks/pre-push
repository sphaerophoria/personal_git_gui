#!/usr/bin/env python3

import os
import sys
import subprocess
import tempfile
import shutil

from pathlib import Path

def find_git_dir():
    d = Path(__file__)
    while d.parent != d:
        d = d.parent
        if (d / ".git").exists():
            return d

    raise RuntimeError("Failed to find git directory")

def main(remote, url):
    try:
        git_dir = find_git_dir()

        with tempfile.TemporaryDirectory() as d:
            os.chdir(str(d))
            subprocess.run(['git', 'clone', str(git_dir), '.'], check=True)
            print(f"Copying target directory to temp dir")
            (Path(d) / 'target').symlink_to(git_dir / 'target')

            for line in sys.stdin:
                line = line.split(" ")
                commit_id = line[1]
                print(f"Testing commit {commit_id}")
                if commit_id.strip() == '0000000000000000000000000000000000000000':
                    continue

                subprocess.run(['git', 'checkout', commit_id], check=True)

                subprocess.run(['cargo', 'test'], check=True)

                subprocess.run(['cargo', 'fmt'], check=True)
                subprocess.run(['git', 'diff-index', '--quiet', 'HEAD'], check=True)


                stderr = subprocess.run(['cargo', 'clippy'], check=True, stdout=subprocess.PIPE,
                        stderr=subprocess.PIPE).stderr
                if len(stderr.decode().splitlines()) != 2:
                    raise RuntimeError("Clippy output is not empty")

        sys.exit(0)
    except Exception as e:
        print(f"{e}");
        sys.exit(1)

if __name__ == '__main__':
    main(sys.argv[1], sys.argv[2])
